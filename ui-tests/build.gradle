ext {
    allure_selenide_version = '2.0-BETA22'
    selenide_version = '5.5.1'
    test_containers_version = '1.12.4'
    webdrivermanager_version = '3.2.0'
}
dependencies {
    compile(
            "io.github.bonigarcia:webdrivermanager:$webdrivermanager_version",
            "com.codeborne:selenide:$selenide_version",
            "io.qameta.allure:allure-selenide:${allure_selenide_version}"
    )
    
    testCompile(
            "org.testcontainers:selenium:${test_containers_version}"
    )
}

test {
    useJUnitPlatform()
}


tasks.withType(Test) {

    useJUnitPlatform()

    systemProperties = [
            'junit.jupiter.execution.parallel.enabled'             : true,
            'junit.jupiter.execution.parallel.mode.default'        : 'concurrent',
            'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent',

            'selenide.browser'                                     : 'com.tests.utils.provider.SelenoidDriverProvider',
            'selenide.timeout'                                     : '6000',
    ]

    systemProperties System.getProperties()

    beforeTest { descriptor ->
        logger.lifecycle("Running: " + descriptor)
    }

    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
        exceptionFormat = 'full'
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

allure {
    version = '2.5.0'
    aspectjweaver = true
    configuration = 'compile'
    clean = true

    useJUnit5 {
        version = '2.8.1'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '5.5.1'
}

apply from: rootProject.file('gradle/tests.gradle')